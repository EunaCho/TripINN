<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />


   
   <!--
   		ViewResolver의 구현체로 특별한 맵핑 정보 없이 의미상 view 이름을 URL로 사용
    	View 이름과 실제 View 자원과의 이름이 같을 때 사용
    	controller에서 넘겨준 modelAndView 값이 index이라면, /WEB-INF/jsp/index.jsp를 찾는다. 
     -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- conmpoent-scan은 xml에 일일이 빈등록을 하지 않고 각 빈 클래스에 @Componet를 통해 자동 빈등록.
		메타 어노테이션으로는 @Controller, @Repository, @Service 를 말한다.
	 -->
	<context:component-scan base-package="com.inn.TripINN" />
</beans:beans>
